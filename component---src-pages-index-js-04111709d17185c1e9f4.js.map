{"version":3,"sources":["webpack:///./src/components/post-link.js","webpack:///./src/components/heroHeader.js","webpack:///./src/pages/index.js"],"names":["PostLink","post","className","to","frontmatter","path","thumbnail","src","alt","title","date","query","render","data","site","siteMetadata","home","description","IndexPage","Posts","allMarkdownRemark","edges","filter","edge","node","map","key","id","name","content","w3l_dom_key","pageQuery"],"mappings":"wKAoBeA,EAjBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,6BAASC,UAAU,SACjB,kBAAC,IAAD,CAAMC,GAAIF,EAAKG,YAAYC,QACtBJ,EAAKG,YAAYE,WAClB,yBAAKC,IAAKN,EAAKG,YAAYE,UAAWE,IAAKP,EAAKG,YAAYK,MAAQ,qBAGxE,gCACE,wBAAIP,UAAU,cACZ,kBAAC,IAAD,CAAMC,GAAIF,EAAKG,YAAYC,KAAMH,UAAU,aACxCD,EAAKG,YAAYK,QAGtB,yBAAKP,UAAU,aAAaD,EAAKG,YAAYM,S,YCdpC,oBACb,kBAAC,IAAD,CACEC,MAAK,aAYLC,OAAQ,SAAAC,GAAI,OACV,yBAAKX,UAAU,eACb,yBAAKA,UAAU,YAAYW,EAAKC,KAAKC,aAAaC,KAAKP,OACvD,yBAAKP,UAAU,mBACb,2BAAIW,EAAKC,KAAKC,aAAaC,KAAKC,aAChC,sFAEF,kBAAC,IAAD,CAAMd,GAAG,MAAMD,UAAU,mBAAzB,wBApBN,UCHF,0CAkCegB,UA3BG,SAAC,GAKZ,IAAD,IAJJL,KACEC,EAGE,EAHFA,KAKIK,EAFF,EAFFC,kBAAqBC,MAKpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKpB,YAAYM,QACvCe,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAI1B,KAAMsB,EAAKC,UAEvD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BAAQV,EAAKC,aAAaN,OAC1B,0BAAMmB,KAAK,cAAcC,QAASf,EAAKC,aAAaE,cAClDH,EAAKC,aAAae,YAAqB,0BAAMF,KAAK,0BAA0BC,QAASf,EAAKC,aAAae,cAAvE,MAEpC,kBAAC,EAAD,MACA,4CACA,yBAAK5B,UAAU,SACZiB,KArBT,IA4BaY,EAAS,c","file":"component---src-pages-index-js-04111709d17185c1e9f4.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst PostLink = ({ post }) => (\r\n  <article className=\"card \">\r\n    <Link to={post.frontmatter.path}>\r\n      {!!post.frontmatter.thumbnail && (\r\n        <img src={post.frontmatter.thumbnail} alt={post.frontmatter.title + \"- Featured Shot\"} />\r\n      )}\r\n    </Link>\r\n    <header>\r\n      <h2 className=\"post-title\">\r\n        <Link to={post.frontmatter.path} className=\"post-link\">\r\n          {post.frontmatter.title}\r\n        </Link>\r\n      </h2>\r\n      <div className=\"post-meta\">{post.frontmatter.date}</div>\r\n    </header>\r\n  </article>\r\n)\r\nexport default PostLink\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query HeadingQuery {\r\n        site {\r\n          siteMetadata {\r\n            home {\r\n              title\r\n              description\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <div className=\"hero-header\">\r\n        <div className=\"headline\">{data.site.siteMetadata.home.title}</div>\r\n        <div className=\"primary-content\">\r\n          <p>{data.site.siteMetadata.home.description}</p>\r\n          <p>I really hope that some notes can be useful to you :)`</p>\r\n        </div>\r\n        <Link to='../' className=\"button -primary\">Visit my Website &rarr;</Link>\r\n      </div>\r\n    )}\r\n  />\r\n)","import React from \"react\"\r\nimport Helmet from 'react-helmet';\r\nimport { graphql } from 'gatsby'\r\nimport Layout from \"../components/layout\"\r\nimport PostLink from \"../components/post-link\"\r\nimport HeroHeader from \"../components/heroHeader\"\r\n\r\nconst IndexPage = ({\r\n  data: {\r\n    site,\r\n    allMarkdownRemark: { edges },\r\n  },\r\n}) => {\r\n\r\n  const Posts = edges\r\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\r\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\r\n\r\n  return (\r\n    <Layout>\r\n      <Helmet>\r\n        <title>{site.siteMetadata.title}</title>\r\n        <meta name=\"description\" content={site.siteMetadata.description} />\r\n        {!site.siteMetadata.w3l_dom_key ? null : <meta name=\"w3l-domain-verification\" content={site.siteMetadata.w3l_dom_key} />}\r\n      </Helmet>\r\n      <HeroHeader/>\r\n      <h2>Blog Posts &darr;</h2>\r\n      <div className=\"grids\">\r\n        {Posts}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\nexport const pageQuery = graphql`\r\n  query indexPageQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        w3l_dom_key\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n            title\r\n            thumbnail\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}